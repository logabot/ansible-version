name: build-ansible-version
on:
  push:
    tags:
      - v*
    branches:
      - dev
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GIT_TAG: ${GITHUB_REF##*/}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: |
              ghcr.io/${{ github.repository }}
      - name: Get the current branch name
        shell: bash
        run: echo "::set-output name=branch::${GITHUB_REF##*/}"
        id: get_tag
      - name: Get ansible version
        shell: bash
        run: |
          ver=$(echo "${{ steps.get_tag.outputs.branch }}); \
          echo "::set-output name=version ${ver:1}"
        id: get_ver
      - name: Build and push Docker image
        if: ${{ startsWith(steps.get_tag.outputs.branch, 'v') }}
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        continue-on-error: true
        with:
          context: .
          push: true
          build-args: |
            ANSIBLE_VERSION=${{ steps.get_ver.outputs.version }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.get_tag.outputs.branch }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push Docker image
        if: ${{ !startsWith(steps.get_tag.outputs.branch, 'v') }}
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        continue-on-error: true
        with:
          context: .
          push: true
          build-args: |
            ANSIBLE_VERSION=${{ steps.get_ver.outputs.version }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.get_tag.outputs.branch }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push Docker image
        if: ${{ startsWith(steps.get_tag.outputs.branch, 'c') }}
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        continue-on-error: true
        with:
          context: .
          push: true
          build-args: |
            ANSIBLE_VERSION=${{ steps.get_ver.outputs.version }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.get_tag.outputs.branch }}
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile_core
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@2a2157eb22c08c9a1fac99263430307b8d1bc7a2
        with:
          image-ref: 'ghcr.io/${{ github.repository }}:${{ steps.get_tag.outputs.branch }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'
